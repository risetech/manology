//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_Allolog_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Word), "Allolog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.Allolog), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Theme", "Theme", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Theme), "WordCandidatesInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordCandidatesInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordInTheme_Theme", "Theme", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Theme), "WordInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordNotInTheme_Theme", "Theme", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Theme), "WordNotInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordNotInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Word), "WordCandidatesInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordCandidatesInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordInTheme_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Word), "WordInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_WordNotInTheme_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.Word), "WordNotInTheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.WordNotInTheme), true)]
[assembly: EdmRelationshipAttribute("TextClassificatorModel", "FK_Theme_ThemeGroup", "ThemeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TextClassifierLib.ThemeGroup), "Theme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TextClassifierLib.Theme), true)]

#endregion

namespace TextClassifierLib
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TextClassificatorEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TextClassificatorEntities object using the connection string found in the 'TextClassificatorEntities' section of the application configuration file.
        /// </summary>
        public TextClassificatorEntities() : base("name=TextClassificatorEntities", "TextClassificatorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TextClassificatorEntities object.
        /// </summary>
        public TextClassificatorEntities(string connectionString) : base(connectionString, "TextClassificatorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TextClassificatorEntities object.
        /// </summary>
        public TextClassificatorEntities(EntityConnection connection) : base(connection, "TextClassificatorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Allolog> Allolog
        {
            get
            {
                if ((_Allolog == null))
                {
                    _Allolog = base.CreateObjectSet<Allolog>("Allolog");
                }
                return _Allolog;
            }
        }
        private ObjectSet<Allolog> _Allolog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Theme> Theme
        {
            get
            {
                if ((_Theme == null))
                {
                    _Theme = base.CreateObjectSet<Theme>("Theme");
                }
                return _Theme;
            }
        }
        private ObjectSet<Theme> _Theme;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Word> Word
        {
            get
            {
                if ((_Word == null))
                {
                    _Word = base.CreateObjectSet<Word>("Word");
                }
                return _Word;
            }
        }
        private ObjectSet<Word> _Word;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordCandidatesInTheme> WordCandidatesInTheme
        {
            get
            {
                if ((_WordCandidatesInTheme == null))
                {
                    _WordCandidatesInTheme = base.CreateObjectSet<WordCandidatesInTheme>("WordCandidatesInTheme");
                }
                return _WordCandidatesInTheme;
            }
        }
        private ObjectSet<WordCandidatesInTheme> _WordCandidatesInTheme;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordInTheme> WordInTheme
        {
            get
            {
                if ((_WordInTheme == null))
                {
                    _WordInTheme = base.CreateObjectSet<WordInTheme>("WordInTheme");
                }
                return _WordInTheme;
            }
        }
        private ObjectSet<WordInTheme> _WordInTheme;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordNotInTheme> WordNotInTheme
        {
            get
            {
                if ((_WordNotInTheme == null))
                {
                    _WordNotInTheme = base.CreateObjectSet<WordNotInTheme>("WordNotInTheme");
                }
                return _WordNotInTheme;
            }
        }
        private ObjectSet<WordNotInTheme> _WordNotInTheme;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThemeGroup> ThemeGroup
        {
            get
            {
                if ((_ThemeGroup == null))
                {
                    _ThemeGroup = base.CreateObjectSet<ThemeGroup>("ThemeGroup");
                }
                return _ThemeGroup;
            }
        }
        private ObjectSet<ThemeGroup> _ThemeGroup;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Allolog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllolog(Allolog allolog)
        {
            base.AddObject("Allolog", allolog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Theme EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheme(Theme theme)
        {
            base.AddObject("Theme", theme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Word EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWord(Word word)
        {
            base.AddObject("Word", word);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordCandidatesInTheme EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordCandidatesInTheme(WordCandidatesInTheme wordCandidatesInTheme)
        {
            base.AddObject("WordCandidatesInTheme", wordCandidatesInTheme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordInTheme EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordInTheme(WordInTheme wordInTheme)
        {
            base.AddObject("WordInTheme", wordInTheme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordNotInTheme EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordNotInTheme(WordNotInTheme wordNotInTheme)
        {
            base.AddObject("WordNotInTheme", wordNotInTheme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ThemeGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThemeGroup(ThemeGroup themeGroup)
        {
            base.AddObject("ThemeGroup", themeGroup);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="Allolog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Allolog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Allolog object.
        /// </summary>
        /// <param name="allolog_id">Initial value of the Allolog_id property.</param>
        /// <param name="allolog_name">Initial value of the Allolog_name property.</param>
        /// <param name="word_id">Initial value of the Word_id property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        public static Allolog CreateAllolog(global::System.Int64 allolog_id, global::System.String allolog_name, global::System.Int64 word_id, global::System.DateTime system_InsDT)
        {
            Allolog allolog = new Allolog();
            allolog.Allolog_id = allolog_id;
            allolog.Allolog_name = allolog_name;
            allolog.Word_id = word_id;
            allolog.System_InsDT = system_InsDT;
            return allolog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Allolog_id
        {
            get
            {
                return _Allolog_id;
            }
            set
            {
                if (_Allolog_id != value)
                {
                    OnAllolog_idChanging(value);
                    ReportPropertyChanging("Allolog_id");
                    _Allolog_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Allolog_id");
                    OnAllolog_idChanged();
                }
            }
        }
        private global::System.Int64 _Allolog_id;
        partial void OnAllolog_idChanging(global::System.Int64 value);
        partial void OnAllolog_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Allolog_name
        {
            get
            {
                return _Allolog_name;
            }
            set
            {
                OnAllolog_nameChanging(value);
                ReportPropertyChanging("Allolog_name");
                _Allolog_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Allolog_name");
                OnAllolog_nameChanged();
            }
        }
        private global::System.String _Allolog_name;
        partial void OnAllolog_nameChanging(global::System.String value);
        partial void OnAllolog_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Word_id
        {
            get
            {
                return _Word_id;
            }
            set
            {
                OnWord_idChanging(value);
                ReportPropertyChanging("Word_id");
                _Word_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Word_id");
                OnWord_idChanged();
            }
        }
        private global::System.Int64 _Word_id;
        partial void OnWord_idChanging(global::System.Int64 value);
        partial void OnWord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_Allolog_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_Allolog_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_Allolog_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_Allolog_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("TextClassificatorModel.FK_Allolog_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="Theme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Theme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Theme object.
        /// </summary>
        /// <param name="theme_id">Initial value of the Theme_id property.</param>
        /// <param name="theme_name">Initial value of the Theme_name property.</param>
        /// <param name="theme_caption">Initial value of the Theme_caption property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        /// <param name="themeGroup_id">Initial value of the ThemeGroup_id property.</param>
        public static Theme CreateTheme(global::System.Int64 theme_id, global::System.String theme_name, global::System.String theme_caption, global::System.DateTime system_InsDT, global::System.Int64 themeGroup_id)
        {
            Theme theme = new Theme();
            theme.Theme_id = theme_id;
            theme.Theme_name = theme_name;
            theme.Theme_caption = theme_caption;
            theme.System_InsDT = system_InsDT;
            theme.ThemeGroup_id = themeGroup_id;
            return theme;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Theme_id
        {
            get
            {
                return _Theme_id;
            }
            set
            {
                if (_Theme_id != value)
                {
                    OnTheme_idChanging(value);
                    ReportPropertyChanging("Theme_id");
                    _Theme_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Theme_id");
                    OnTheme_idChanged();
                }
            }
        }
        private global::System.Int64 _Theme_id;
        partial void OnTheme_idChanging(global::System.Int64 value);
        partial void OnTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Theme_name
        {
            get
            {
                return _Theme_name;
            }
            set
            {
                OnTheme_nameChanging(value);
                ReportPropertyChanging("Theme_name");
                _Theme_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Theme_name");
                OnTheme_nameChanged();
            }
        }
        private global::System.String _Theme_name;
        partial void OnTheme_nameChanging(global::System.String value);
        partial void OnTheme_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Theme_caption
        {
            get
            {
                return _Theme_caption;
            }
            set
            {
                OnTheme_captionChanging(value);
                ReportPropertyChanging("Theme_caption");
                _Theme_caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Theme_caption");
                OnTheme_captionChanged();
            }
        }
        private global::System.String _Theme_caption;
        partial void OnTheme_captionChanging(global::System.String value);
        partial void OnTheme_captionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ThemeGroup_id
        {
            get
            {
                return _ThemeGroup_id;
            }
            set
            {
                OnThemeGroup_idChanging(value);
                ReportPropertyChanging("ThemeGroup_id");
                _ThemeGroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThemeGroup_id");
                OnThemeGroup_idChanged();
            }
        }
        private global::System.Int64 _ThemeGroup_id;
        partial void OnThemeGroup_idChanging(global::System.Int64 value);
        partial void OnThemeGroup_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Theme", "WordCandidatesInTheme")]
        public EntityCollection<WordCandidatesInTheme> WordCandidatesInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordCandidatesInTheme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "WordCandidatesInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordCandidatesInTheme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "WordCandidatesInTheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordInTheme_Theme", "WordInTheme")]
        public EntityCollection<WordInTheme> WordInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordInTheme>("TextClassificatorModel.FK_WordInTheme_Theme", "WordInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordInTheme>("TextClassificatorModel.FK_WordInTheme_Theme", "WordInTheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordNotInTheme_Theme", "WordNotInTheme")]
        public EntityCollection<WordNotInTheme> WordNotInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordNotInTheme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "WordNotInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordNotInTheme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "WordNotInTheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_Theme_ThemeGroup", "ThemeGroup")]
        public ThemeGroup ThemeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThemeGroup>("TextClassificatorModel.FK_Theme_ThemeGroup", "ThemeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThemeGroup>("TextClassificatorModel.FK_Theme_ThemeGroup", "ThemeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThemeGroup> ThemeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThemeGroup>("TextClassificatorModel.FK_Theme_ThemeGroup", "ThemeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThemeGroup>("TextClassificatorModel.FK_Theme_ThemeGroup", "ThemeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="ThemeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThemeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThemeGroup object.
        /// </summary>
        /// <param name="themeGroup_id">Initial value of the ThemeGroup_id property.</param>
        /// <param name="themeGroup_name">Initial value of the ThemeGroup_name property.</param>
        public static ThemeGroup CreateThemeGroup(global::System.Int64 themeGroup_id, global::System.String themeGroup_name)
        {
            ThemeGroup themeGroup = new ThemeGroup();
            themeGroup.ThemeGroup_id = themeGroup_id;
            themeGroup.ThemeGroup_name = themeGroup_name;
            return themeGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ThemeGroup_id
        {
            get
            {
                return _ThemeGroup_id;
            }
            set
            {
                if (_ThemeGroup_id != value)
                {
                    OnThemeGroup_idChanging(value);
                    ReportPropertyChanging("ThemeGroup_id");
                    _ThemeGroup_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThemeGroup_id");
                    OnThemeGroup_idChanged();
                }
            }
        }
        private global::System.Int64 _ThemeGroup_id;
        partial void OnThemeGroup_idChanging(global::System.Int64 value);
        partial void OnThemeGroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThemeGroup_name
        {
            get
            {
                return _ThemeGroup_name;
            }
            set
            {
                OnThemeGroup_nameChanging(value);
                ReportPropertyChanging("ThemeGroup_name");
                _ThemeGroup_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ThemeGroup_name");
                OnThemeGroup_nameChanged();
            }
        }
        private global::System.String _ThemeGroup_name;
        partial void OnThemeGroup_nameChanging(global::System.String value);
        partial void OnThemeGroup_nameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_Theme_ThemeGroup", "Theme")]
        public EntityCollection<Theme> Theme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Theme>("TextClassificatorModel.FK_Theme_ThemeGroup", "Theme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Theme>("TextClassificatorModel.FK_Theme_ThemeGroup", "Theme", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="Word")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Word : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Word object.
        /// </summary>
        /// <param name="word_id">Initial value of the Word_id property.</param>
        /// <param name="word_name">Initial value of the Word_name property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        public static Word CreateWord(global::System.Int64 word_id, global::System.String word_name, global::System.DateTime system_InsDT)
        {
            Word word = new Word();
            word.Word_id = word_id;
            word.Word_name = word_name;
            word.System_InsDT = system_InsDT;
            return word;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Word_id
        {
            get
            {
                return _Word_id;
            }
            set
            {
                if (_Word_id != value)
                {
                    OnWord_idChanging(value);
                    ReportPropertyChanging("Word_id");
                    _Word_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Word_id");
                    OnWord_idChanged();
                }
            }
        }
        private global::System.Int64 _Word_id;
        partial void OnWord_idChanging(global::System.Int64 value);
        partial void OnWord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word_name
        {
            get
            {
                return _Word_name;
            }
            set
            {
                OnWord_nameChanging(value);
                ReportPropertyChanging("Word_name");
                _Word_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word_name");
                OnWord_nameChanged();
            }
        }
        private global::System.String _Word_name;
        partial void OnWord_nameChanging(global::System.String value);
        partial void OnWord_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_Allolog_Word", "Allolog")]
        public EntityCollection<Allolog> Allolog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Allolog>("TextClassificatorModel.FK_Allolog_Word", "Allolog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Allolog>("TextClassificatorModel.FK_Allolog_Word", "Allolog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Word", "WordCandidatesInTheme")]
        public EntityCollection<WordCandidatesInTheme> WordCandidatesInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordCandidatesInTheme>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "WordCandidatesInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordCandidatesInTheme>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "WordCandidatesInTheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordInTheme_Word", "WordInTheme")]
        public EntityCollection<WordInTheme> WordInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordInTheme>("TextClassificatorModel.FK_WordInTheme_Word", "WordInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordInTheme>("TextClassificatorModel.FK_WordInTheme_Word", "WordInTheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordNotInTheme_Word", "WordNotInTheme")]
        public EntityCollection<WordNotInTheme> WordNotInTheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordNotInTheme>("TextClassificatorModel.FK_WordNotInTheme_Word", "WordNotInTheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordNotInTheme>("TextClassificatorModel.FK_WordNotInTheme_Word", "WordNotInTheme", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="WordCandidatesInTheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordCandidatesInTheme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordCandidatesInTheme object.
        /// </summary>
        /// <param name="wordCandidatesInTheme_id">Initial value of the WordCandidatesInTheme_id property.</param>
        /// <param name="word_id">Initial value of the Word_id property.</param>
        /// <param name="theme_id">Initial value of the Theme_id property.</param>
        /// <param name="wordCandidatesInTheme_Visible">Initial value of the WordCandidatesInTheme_Visible property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        public static WordCandidatesInTheme CreateWordCandidatesInTheme(global::System.Int64 wordCandidatesInTheme_id, global::System.Int64 word_id, global::System.Int64 theme_id, global::System.Boolean wordCandidatesInTheme_Visible, global::System.DateTime system_InsDT)
        {
            WordCandidatesInTheme wordCandidatesInTheme = new WordCandidatesInTheme();
            wordCandidatesInTheme.WordCandidatesInTheme_id = wordCandidatesInTheme_id;
            wordCandidatesInTheme.Word_id = word_id;
            wordCandidatesInTheme.Theme_id = theme_id;
            wordCandidatesInTheme.WordCandidatesInTheme_Visible = wordCandidatesInTheme_Visible;
            wordCandidatesInTheme.System_InsDT = system_InsDT;
            return wordCandidatesInTheme;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WordCandidatesInTheme_id
        {
            get
            {
                return _WordCandidatesInTheme_id;
            }
            set
            {
                if (_WordCandidatesInTheme_id != value)
                {
                    OnWordCandidatesInTheme_idChanging(value);
                    ReportPropertyChanging("WordCandidatesInTheme_id");
                    _WordCandidatesInTheme_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WordCandidatesInTheme_id");
                    OnWordCandidatesInTheme_idChanged();
                }
            }
        }
        private global::System.Int64 _WordCandidatesInTheme_id;
        partial void OnWordCandidatesInTheme_idChanging(global::System.Int64 value);
        partial void OnWordCandidatesInTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Word_id
        {
            get
            {
                return _Word_id;
            }
            set
            {
                OnWord_idChanging(value);
                ReportPropertyChanging("Word_id");
                _Word_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Word_id");
                OnWord_idChanged();
            }
        }
        private global::System.Int64 _Word_id;
        partial void OnWord_idChanging(global::System.Int64 value);
        partial void OnWord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Theme_id
        {
            get
            {
                return _Theme_id;
            }
            set
            {
                OnTheme_idChanging(value);
                ReportPropertyChanging("Theme_id");
                _Theme_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Theme_id");
                OnTheme_idChanged();
            }
        }
        private global::System.Int64 _Theme_id;
        partial void OnTheme_idChanging(global::System.Int64 value);
        partial void OnTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WordCandidatesInTheme_Visible
        {
            get
            {
                return _WordCandidatesInTheme_Visible;
            }
            set
            {
                OnWordCandidatesInTheme_VisibleChanging(value);
                ReportPropertyChanging("WordCandidatesInTheme_Visible");
                _WordCandidatesInTheme_Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordCandidatesInTheme_Visible");
                OnWordCandidatesInTheme_VisibleChanged();
            }
        }
        private global::System.Boolean _WordCandidatesInTheme_Visible;
        partial void OnWordCandidatesInTheme_VisibleChanging(global::System.Boolean value);
        partial void OnWordCandidatesInTheme_VisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Theme", "Theme")]
        public Theme Theme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "Theme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "Theme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theme> ThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "Theme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theme>("TextClassificatorModel.FK_WordCandidatesInTheme_Theme", "Theme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordCandidatesInTheme_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("TextClassificatorModel.FK_WordCandidatesInTheme_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="WordInTheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordInTheme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordInTheme object.
        /// </summary>
        /// <param name="wordInTheme_id">Initial value of the WordInTheme_id property.</param>
        /// <param name="wordInTheme_isLexicalizedWord">Initial value of the WordInTheme_isLexicalizedWord property.</param>
        /// <param name="word_id">Initial value of the Word_id property.</param>
        /// <param name="theme_id">Initial value of the Theme_id property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        public static WordInTheme CreateWordInTheme(global::System.Int64 wordInTheme_id, global::System.Boolean wordInTheme_isLexicalizedWord, global::System.Int64 word_id, global::System.Int64 theme_id, global::System.DateTime system_InsDT)
        {
            WordInTheme wordInTheme = new WordInTheme();
            wordInTheme.WordInTheme_id = wordInTheme_id;
            wordInTheme.WordInTheme_isLexicalizedWord = wordInTheme_isLexicalizedWord;
            wordInTheme.Word_id = word_id;
            wordInTheme.Theme_id = theme_id;
            wordInTheme.System_InsDT = system_InsDT;
            return wordInTheme;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WordInTheme_id
        {
            get
            {
                return _WordInTheme_id;
            }
            set
            {
                if (_WordInTheme_id != value)
                {
                    OnWordInTheme_idChanging(value);
                    ReportPropertyChanging("WordInTheme_id");
                    _WordInTheme_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WordInTheme_id");
                    OnWordInTheme_idChanged();
                }
            }
        }
        private global::System.Int64 _WordInTheme_id;
        partial void OnWordInTheme_idChanging(global::System.Int64 value);
        partial void OnWordInTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WordInTheme_isLexicalizedWord
        {
            get
            {
                return _WordInTheme_isLexicalizedWord;
            }
            set
            {
                OnWordInTheme_isLexicalizedWordChanging(value);
                ReportPropertyChanging("WordInTheme_isLexicalizedWord");
                _WordInTheme_isLexicalizedWord = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordInTheme_isLexicalizedWord");
                OnWordInTheme_isLexicalizedWordChanged();
            }
        }
        private global::System.Boolean _WordInTheme_isLexicalizedWord;
        partial void OnWordInTheme_isLexicalizedWordChanging(global::System.Boolean value);
        partial void OnWordInTheme_isLexicalizedWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Word_id
        {
            get
            {
                return _Word_id;
            }
            set
            {
                OnWord_idChanging(value);
                ReportPropertyChanging("Word_id");
                _Word_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Word_id");
                OnWord_idChanged();
            }
        }
        private global::System.Int64 _Word_id;
        partial void OnWord_idChanging(global::System.Int64 value);
        partial void OnWord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Theme_id
        {
            get
            {
                return _Theme_id;
            }
            set
            {
                OnTheme_idChanging(value);
                ReportPropertyChanging("Theme_id");
                _Theme_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Theme_id");
                OnTheme_idChanged();
            }
        }
        private global::System.Int64 _Theme_id;
        partial void OnTheme_idChanging(global::System.Int64 value);
        partial void OnTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordInTheme_Theme", "Theme")]
        public Theme Theme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordInTheme_Theme", "Theme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordInTheme_Theme", "Theme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theme> ThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordInTheme_Theme", "Theme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theme>("TextClassificatorModel.FK_WordInTheme_Theme", "Theme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordInTheme_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordInTheme_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordInTheme_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordInTheme_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("TextClassificatorModel.FK_WordInTheme_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TextClassificatorModel", Name="WordNotInTheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordNotInTheme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordNotInTheme object.
        /// </summary>
        /// <param name="wordNotInTheme_id">Initial value of the WordNotInTheme_id property.</param>
        /// <param name="word_id">Initial value of the Word_id property.</param>
        /// <param name="theme_id">Initial value of the Theme_id property.</param>
        /// <param name="system_InsDT">Initial value of the System_InsDT property.</param>
        public static WordNotInTheme CreateWordNotInTheme(global::System.Int64 wordNotInTheme_id, global::System.Int64 word_id, global::System.Int64 theme_id, global::System.DateTime system_InsDT)
        {
            WordNotInTheme wordNotInTheme = new WordNotInTheme();
            wordNotInTheme.WordNotInTheme_id = wordNotInTheme_id;
            wordNotInTheme.Word_id = word_id;
            wordNotInTheme.Theme_id = theme_id;
            wordNotInTheme.System_InsDT = system_InsDT;
            return wordNotInTheme;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WordNotInTheme_id
        {
            get
            {
                return _WordNotInTheme_id;
            }
            set
            {
                if (_WordNotInTheme_id != value)
                {
                    OnWordNotInTheme_idChanging(value);
                    ReportPropertyChanging("WordNotInTheme_id");
                    _WordNotInTheme_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WordNotInTheme_id");
                    OnWordNotInTheme_idChanged();
                }
            }
        }
        private global::System.Int64 _WordNotInTheme_id;
        partial void OnWordNotInTheme_idChanging(global::System.Int64 value);
        partial void OnWordNotInTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Word_id
        {
            get
            {
                return _Word_id;
            }
            set
            {
                OnWord_idChanging(value);
                ReportPropertyChanging("Word_id");
                _Word_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Word_id");
                OnWord_idChanged();
            }
        }
        private global::System.Int64 _Word_id;
        partial void OnWord_idChanging(global::System.Int64 value);
        partial void OnWord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Theme_id
        {
            get
            {
                return _Theme_id;
            }
            set
            {
                OnTheme_idChanging(value);
                ReportPropertyChanging("Theme_id");
                _Theme_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Theme_id");
                OnTheme_idChanged();
            }
        }
        private global::System.Int64 _Theme_id;
        partial void OnTheme_idChanging(global::System.Int64 value);
        partial void OnTheme_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime System_InsDT
        {
            get
            {
                return _System_InsDT;
            }
            set
            {
                OnSystem_InsDTChanging(value);
                ReportPropertyChanging("System_InsDT");
                _System_InsDT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System_InsDT");
                OnSystem_InsDTChanged();
            }
        }
        private global::System.DateTime _System_InsDT;
        partial void OnSystem_InsDTChanging(global::System.DateTime value);
        partial void OnSystem_InsDTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordNotInTheme_Theme", "Theme")]
        public Theme Theme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "Theme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "Theme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theme> ThemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "Theme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theme>("TextClassificatorModel.FK_WordNotInTheme_Theme", "Theme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TextClassificatorModel", "FK_WordNotInTheme_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordNotInTheme_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordNotInTheme_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("TextClassificatorModel.FK_WordNotInTheme_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("TextClassificatorModel.FK_WordNotInTheme_Word", "Word", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
